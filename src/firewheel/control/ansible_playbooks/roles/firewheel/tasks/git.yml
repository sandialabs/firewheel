---
###################################################################################################
# This playbook will clone a Git repository and move specified cached files
# If you are using an access token, you can specify it in the `git_server` URL
# For example: https://<token>@github.com/user/repo.git
# The user will need to provide all relevant information.
# An example configuration is shown below:
#
# git_servers:
#   - server_url: "https://github.com"
#     repositories:
#       - path: "firewheel/mc_repo1"
#       - path: "firewheel/mc_repo2"
#         branch: "develop"
#   - server_url: "ssh://git@gitlab.com"
#     repositories:
#       - path: "emulytics/firewheel/mc_repo3"
#         branch: "feature-branch"
###################################################################################################

- name: Clone Git repositories and move cached files
  block:
    - name: Check if Git servers information is provided
      ansible.builtin.assert:
        that:
          - (git_servers is defined and git_servers | length > 0)
        success_msg: "Found git servers information, trying to pull caches"
        fail_msg: "No git servers information provided, continuing..."
        quiet: true
      register: git_cache

    - name: Clone each repository from each server
      loop: "{{ git_servers | subelements('repositories') }}"
      vars:
        server_url: "{{ item.0.server_url }}"
        repo_path: "{{ item.1.path }}"
        repo_branch: "{{ item.1.branch | default('HEAD') }}"
      block:
        - name: Clone the repository
          ansible.builtin.git:
            repo: "{{ server_url }}/{{ repo_path }}"
            dest: "/tmp/fwcache/{{ repo_path }}"
            clone: true
            version: "{{ repo_branch }}"
            update: true
          register: git_clone_result

        - name: Move cached files after cloning the repository
          block:
            - name: Attempt to move each cached file
              ansible.builtin.copy:
                src: "/tmp/fwcache/{{ repo_path }}/{{ item.source }}"
                dest: "{{ item.destination }}"
                mode: "0660"
              loop: "{{ cached_files }}"
              register: move_result
              ignore_errors: true

            - name: Report file move results
              ansible.builtin.debug:
                msg: >
                  {% for result in move_result.results %}
                    {% if result is succeeded %}
                      Successfully moved {{ item.source }} to {{ item.destination }}.
                    {% endif %}
                  {% endfor %}

      rescue:
        - name: Handle git clone failures
          ansible.builtin.debug:
            msg: "Cloning repository {{ server_url }}/{{ repo_path }} failed. Continuing..."
          when: git_clone_result is failed

  rescue:
    - name: Rescue the block
      ansible.builtin.debug:
        msg: "No Git Cache information provided"
      when: git_cache is failed
